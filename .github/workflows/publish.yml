name: Publish

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  build:
    name: Build and Report
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: pip install -e '.[test]'
    - name: Test with pytest
      run: coverage run -m pytest #test/unit_tests/test_json.py

    - name: Generate Report
      run: coverage html --omit="*/test*" -d coverage_report
    - name: "Upload coverage artifact"
      if: github.event_name == 'pull_request' #&& github.base_ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: .coverage
    - name: "Upload HTML report"
      if: github.event_name == 'pull_request' #&& github.base_ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: coverage_report
        path: coverage_report


  publish:
    name: Publish report
    needs: build
    if: github.event_name == 'pull_request' # && github.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: "Checkout repo"
      - name: "Checkout reports repo"
        run: |
          set -xe
          git clone https://${{secrets.REPORT_TOKEN}}@github.com/jhb123/PuzzleServerCoverageReports
          cd PuzzleServerCoverageReports
          git config --global user.name Joe Briggs
          git config --global user.email jhbriggs23@gmail.com
          git checkout main
      - name: "download report"
        uses: actions/download-artifact@v3
        with:
          name: coverage_report
          path: PuzzleServerCoverageReports/coverage
      - name: "upload coverage report"
        run: |
          set -xe
          ls
          cd PuzzleServerCoverageReports
          ls
          git add coverage/* -f
          git commit -m "adds a coverage report"
          git push

  tag:
    name: Tag and Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
